package com.pico.picoinvoices;

import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Locale;

import android.os.Bundle;
import android.app.Activity;
import android.content.Intent;
import android.database.Cursor;
import android.view.Menu;
import android.view.View;
import android.widget.AdapterView;
import android.widget.ListView;
import android.widget.TextView;
import android.widget.Toast;

public class RegisterServices extends Activity
{

    private RegisterServicesAdapter myDb = null;
    String customerID = "";
    
    ////////////////////////////////////////////////////////
    /////*
    /////*  Activity lifecycle functions
    /////*
    ////////////////////////////////////////////////////////
    @Override
    protected void onCreate(Bundle savedInstanceState) 
    {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_client_invoices);
        
        refresh();
        
    }
    @Override
    public boolean onCreateOptionsMenu(Menu menu) 
    {
        // Inflate the menu; this adds items to the action bar if it is present.
            boolean result = super.onCreateOptionsMenu(menu);
            return result;
    }
    @Override
    protected void onDestroy() 
    {
        super.onDestroy();
        closeDB();
    }
    @Override
    protected void onRestart() {
        super.onRestart();
        refresh();
    }
    @Override
    protected void onResume() 
    {
        super.onResume();
        refresh();
    }
    
    ////////////////////////////////////////////////////////
    /////*
    /////*  Database open/close
    /////*
    ////////////////////////////////////////////////////////
    private void closeDB() 
    {
        myDb.close();
    }
    private void openDB() 
    {
        myDb = new RegisterServicesAdapter(this);
        myDb.open();
    }
    
    ////////////////////////////////////////////////////////
    /////*
    /////*  Refresh functions
    /////*
    ////////////////////////////////////////////////////////
    private void refresh()
    {
        openDB();
        populateListView();
        registerClickCallback();
        closeDB();
    }
    
    private void populateListView()
    {
        openDB();
        //Create the list of items
        Cursor cursor = myDb.getAllRows();                          
        
        //  String array to use as a map for which db rows should be mapped to which element in the template layout
        String[] client_name_list = new String[]{RegisterServicesAdapter.KEY_ROWID, RegisterServicesAdapter.KEY_NAME, RegisterServicesAdapter.KEY_TYPE, RegisterServicesAdapter.KEY_RATE};
        int[] ints = new int[] {R.id.invoice_listview_layout_template_txtInvoiceNumber, R.id.invoice_listview_layout_template_txtDate, R.id.invoice_listview_layout_template_txtStatus, R.id.invoice_listview_layout_template_CustomerID};
    
        ListViewAdapter adapter = new ListViewAdapter(this, R.layout.invoice_listview_layout_template, cursor, client_name_list , ints, 0);
        
        
        ListView list = (ListView) findViewById(R.id.client_invoices_listView);
        list.setAdapter(adapter);
        closeDB();
        
    }
    
    private void registerClickCallback() 
    {
        ListView list = (ListView) findViewById(R.id.client_invoices_listView);
        list.setOnItemClickListener(new AdapterView.OnItemClickListener() 
        {
            @Override
            public void onItemClick(AdapterView<?> parent, View viewClicked, int position, long idInDB) 
            {
//                    TextView textView = (TextView) viewClicked.findViewById(R.id.invoice_listview_layout_template_CustomerID);
//                    customerID = (String) textView.getText();
//                    Intent intent1 = new Intent(ClientInvoices.this, ShowDetailedInvoice.class);
//                    intent1.putExtra("InvoiceID", Long.toString(idInDB));
//                    intent1.putExtra("CustomerID", customerID);
//                     System.out.println(customerID);
//                    startActivity(intent1);
            }
        });
    }
    
    ////////////////////////////////////////////////////////
    /////*
    /////*  Utility functions 
    /////*
    ////////////////////////////////////////////////////////
    private String getDateTime() {
        SimpleDateFormat dateFormat = new SimpleDateFormat(
                "yyyy-MM-dd HH:mm:ss", Locale.getDefault());
        Date date = new Date();
        return dateFormat.format(date);
    }
    
    ////////////////////////////////////////////////////////
    /////*
    /////*  OnClick listener for adding an invoice as described in the xml
    /////*
    ////////////////////////////////////////////////////////
    public void onClick_AddService(View v)
    {
        openDB();
        String name = getDateTime();
        String type = Long.toString(ClientList.CLIENT_ID);
        String rate = getDateTime();
        
        myDb.insertRow(name, type, rate);
        closeDB();
        refresh();
    }
}
